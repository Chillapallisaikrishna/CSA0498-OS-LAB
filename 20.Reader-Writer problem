#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>
#include <unistd.h>

sem_t mutex, wrt;
int readcount;
char buf[100];

void *reader(void *arg)
{
    int i = *((int *) arg);
    sem_wait(&mutex);
    readcount++;
    if (readcount == 1)
        sem_wait(&wrt);
    sem_post(&mutex);

    printf("Reader %d: read %s\n", i, buf);

    sem_wait(&mutex);
    readcount--;
    if (readcount == 0)
        sem_post(&wrt);
    sem_post(&mutex);
}

void *writer(void *arg)
{
    int i = *((int *) arg);
    sem_wait(&wrt);

    sprintf(buf, "Writer %d wrote this", i);
    printf("Writer %d: wrote %s\n", i, buf);

    sem_post(&wrt);
}

int main()
{
    pthread_t rtid[13], wtid[13];
    int i, j[10];

    sem_init(&mutex, 0, 1);
    sem_init(&wrt, 0, 1);

    for (i = 0; i < 13; i++)
    {
        j[i] = i;
        pthread_create(&wtid[i], NULL, writer, (void *) &j[i]);
        pthread_create(&rtid[i], NULL, reader, (void *) &j[i]);
    }

    for (i = 0; i < 13; i++)
    {
        pthread_join(wtid[i], NULL);
        pthread_join(rtid[i], NULL);
    }

    return 0;
}
